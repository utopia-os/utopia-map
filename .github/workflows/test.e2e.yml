name: test:e2e

on: push

jobs:
  cypress-e2e-tests:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v5.0.0

      - name: Set up Node.js
        uses: actions/setup-node@89d709d423dc495668cd762a18dd4a070611be3f # v5.0.0
        with:
          node-version-file: ./.tool-versions
          cache: 'npm'
          cache-dependency-path: './cypress/package-lock.json'

      - name: Build Library
        run: |
          npm install
          npm run build
        working-directory: ./lib

      - name: Build Frontend
        run: |
          cp .env.dist .env
          sed -i '/VITE_DIRECTUS_ADMIN_ROLE=/c\VITE_DIRECTUS_ADMIN_ROLE=8141dee8-8e10-48d0-baf1-680aea271298' .env
          npm ci
          npm run build
        working-directory: ./app

      - name: Clean Database State
        run: |
          # Remove any existing database data to ensure fresh state
          sudo rm -rf ./data/database
          mkdir -p ./data/uploads
          sudo chmod 777 -R ./data

      - name: Build and start all Containers
        run: docker compose up -d

      - name: Wait for Directus to be Ready
        run: |
          echo "Waiting for Directus API to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:8055/server/health; do echo "Waiting for Directus..."; sleep 5; done'
          echo "Directus is ready!"

      - name: Seed Backend
        run: |
          mkdir -p ./data/uploads
          sudo chmod 777 -R ./data
          cd backend && ./seed.sh
        working-directory: ./

      - name: Wait for Application to be Ready
        run: |
          echo "Waiting for application to be ready..."
          timeout 300 bash -c 'until curl -f http://localhost:8080/login; do sleep 5; done'
          echo "Application is ready!"

      - name: Health Check
        run: |
          echo "Frontend health check:"
          curl -f http://localhost:8080/login || exit 1
          echo "Backend health check:"
          curl -f http://localhost:8055/server/health || exit 1

      - name: Install Cypress Dependencies
        run: npm ci
        working-directory: ./cypress

      - name: Run E2E Tests
        id: cypress-tests
        continue-on-error: true
        run: npm run test:split:auto
        working-directory: ./cypress
        env:
          # Disable individual cypress-split summaries to avoid conflicts
          SPLIT_SUMMARY: false

      - name: Merge Test Reports
        if: always()
        run: |
          if [ -d "reports/json" ] && [ "$(ls -A reports/json)" ]; then
            npm run report:merge
          else
            echo "No test reports to merge"
          fi
        working-directory: ./cypress

      - name: Generate HTML Report
        if: always()
        run: |
          if [ -f "reports/json/merged-report.json" ]; then
            npm run report:generate
          else
            echo "No merged report to generate HTML from"
          fi
        working-directory: ./cypress

      - name: Create Test Summary
        if: always()
        run: |
          echo "# 🧪 Cypress E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Count total specs
          TOTAL_SPECS=$(find e2e -name "*.cy.ts" | wc -l)
          echo "**Total Specs:** $TOTAL_SPECS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check if tests passed or failed
          if [ "${{ steps.cypress-tests.outcome }}" = "success" ]; then
            echo "## ✅ All Tests Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ Some Tests Failed" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY

          # Add spec details if JSON reports exist
          if [ -d "reports/json" ] && [ "$(ls -A reports/json)" ]; then
            echo "## 📊 Test Details" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Spec File | Status |" >> $GITHUB_STEP_SUMMARY
            echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY

            # List all spec files and their status
            for spec in $(find e2e -name "*.cy.ts" | sort); do
              spec_name=$(basename "$spec")
              echo "| $spec_name | ✅ Executed |" >> $GITHUB_STEP_SUMMARY
            done
          fi

          # Add links to artifacts if they exist
          if [ -f "reports/html/index.html" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## 📋 Reports" >> $GITHUB_STEP_SUMMARY
            echo "- HTML Report: Available in artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- Screenshots: Available in artifacts (if tests failed)" >> $GITHUB_STEP_SUMMARY
          fi
        working-directory: ./cypress

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: failure() && steps.cypress-tests.outcome == 'failure'
        with:
          name: e2e-test-results-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            cypress/reports/screenshots
            cypress/reports/html
          retention-days: 30
          if-no-files-found: warn

      - name: Fail Workflow if Tests Failed
        if: steps.cypress-tests.outcome == 'failure'
        run: exit 1